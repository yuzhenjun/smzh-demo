#级别由高到低依次是：fatal、error、warn、info、debug
log4j.rootCategory=debug,stdout1,stdout2
#log4j.appender.stdout
#定义名为stdout的输出端是哪种类型
#org.apache.log4j.ConsoleAppender（控制台），
#org.apache.log4j.FileAppender（文件），
#org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件），
#org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件）
#org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）
#log4j.appender.stdout1=org.apache.log4j.FileAppender   
#定义日志的输出路径和文件名   
#log4j.appender.stdout1.File=F:\\logs\\FileAppender.log     
# log4j.appender.stdout.layout
#定义名为stdout的输出端的layout是哪种类型
#org.apache.log4j.HTMLLayout（以HTML表格形式布局），
#org.apache.log4j.PatternLayout（可以灵活地指定布局模式），
#org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），
#org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）
#log4j.appender.stdout1.layout=org.apache.log4j.TTCCLayout     

log4j.appender.stdout1=org.apache.log4j.ConsoleAppender
log4j.appender.stdout1.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout1.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} [%t] [%c] [%p] - %m%n
#按时间分文件
#yyyy-MM，对应monthly(每月)
#yyyy-ww，对应weekly(每周)
#yyyy-MM-dd，对应daily(每天)
#yyyy-MM-dd-a，对应half-daily(每半天)
#yyyy-MM-dd-HH，对应hourly(每小时)
#yyyy-MM-dd-HH-mm，对应minutely(每分钟)
log4j.appender.stdout2=org.apache.log4j.DailyRollingFileAppender
log4j.appender.stdout2.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout2.File=${catalina.home}/logs/tools.log
log4j.appender.stdout2.DatePattern='-'yyyy-MM'.log'
log4j.appender.stdout2.layout.ConversionPattern=%L%d{yy-MM-dd HH:mm:ss:SSS}][%C.%M] %m%n

#按大小分文件

#log4j.appender.stdout4=org.apache.log4j.RollingFileAppender
#log4j.appender.stdout4.layout=org.apache.log4j.PatternLayout
#log4j.appender.stdout4.layout.ConversionPattern=%L[%d{yy-MM-dd HH:mm:ss:SSS}][%C.%M] %m%n
#log4j.appender.stdout4.File=F:\\logs\\RollingFileAppender.log
##设置每个日志文件的最大容量  
#log4j.appender.stdout4.MaxFileSize=6KB
#log4j.appender.stdout4.MaxBackupIndex=3 

#参数	说明
#%m	输出代码中的消息
#%M	方法名
#%p	输出优先级
#%C	类名
#%t	线程名
#%n	换行
#%d	日期，%d{yyyy-MMM-dd HH:mm:ss:SSS}
#%L	行号
#%r	应用启动的时间